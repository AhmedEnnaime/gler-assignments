services:
  db:
    image: postgres:16
    container_name: assignment-db
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - assignment-network

  backend:
    build:
      context: ./assignment-backend
      dockerfile: Dockerfile
    container_name: assignment-backend
    depends_on:
      - db
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
    ports:
      - "8080:8080"
    networks:
      - assignment-network

  frontend:
    build:
      context: ./assignment-frontend
      dockerfile: Dockerfile
    container_name: assignment-frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - assignment-network

  jenkins:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: assignment-jenkins
    user: root
    restart: always
    ports:
      - "8081:8080"
      - "50000:50000"
    volumes:
      - ./jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
      - .:/workspace
    environment:
      - JAVA_OPTS=-Djenkins.install.runSetupWizard=false
    networks:
      - assignment-network

volumes:
  postgres_data:

networks:
  assignment-network:
    driver: bridge